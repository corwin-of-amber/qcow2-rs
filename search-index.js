var searchIndex = {};
searchIndex["qcow2"] = {"doc":"This crate can parse and read qcow2 virtual disks, as used by qemu and other emulators.","items":[[3,"Reader","qcow2","A reader of data from the virtual disk image.",null,null],[3,"Qcow2","","A qcow2 image.",null,null],[4,"Error","","The error type for Qcow2 operations.",null,null],[13,"Io","","The underlying source of a Qcow2 reported an I/O error.",0,null],[13,"Poison","","A synchronization primitive reported being poisoned.\nSee [std::sync::PoisonError](https://doc.rust-lang.org/std/sync/struct.PoisonError.html).",0,null],[13,"FileType","","The file being opened is not a qcow2 file.",0,null],[13,"Version","","The file being opened has an unsupported version.",0,null],[13,"UnsupportedFeature","","A feature unsupported by this library was detected.",0,null],[13,"FileFormat","","An error was detected in a qcow2 file. The file may be corrupt.",0,null],[13,"Internal","","An internal error was detected, there must be a bug in this library.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"poisonerror"}],"output":{"name":"error"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"reader","qcow2","Get a Reader for the main virtual disk.",2,{"inputs":[{"name":"qcow2"}],"output":{"name":"result"}}],[11,"read_at","","",3,null],[11,"size","","",3,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[6,"Result","","The result type for operations on qcow2 images.",null,null],[11,"open","","Open a source of data as a qcow2 image.",2,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"cluster_size","","Get the size of each block of this qcow2 image.",2,{"inputs":[{"name":"qcow2"}],"output":{"name":"u64"}}],[11,"guest_size","","Get the size of the virtual image.",2,{"inputs":[{"name":"qcow2"}],"output":{"name":"u64"}}],[11,"fmt","","",2,{"inputs":[{"name":"qcow2"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Error"],[3,"Error"],[3,"Qcow2"],[3,"Reader"]]};
searchIndex["positioned_io"] = {"doc":"This crate allows you to specify an offset for reads and writes, without changing the current\nposition in a file. This is similar to [`pread()` and `pwrite()`][pread] in C.","items":[[3,"ByteIo","positioned_io","Read or write with a given inherent byte-order.",null,null],[3,"Cursor","","Adapts a `ReadAt` or `WriteAt` into a `Read` or `Write`.",null,null],[3,"SizeCursor","","Adapts a `ReadAt` or `WriteAt` into a `Read` or `Write`, with better seeking.",null,null],[3,"Slice","","A window into another `ReatAt` or `WriteAt`.",null,null],[11,"new","","Create a new `ByteIo` from some sort of reader or writer.",0,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"i"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"i"}}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_at","","",0,null],[11,"write_at","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_u16","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_i16","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_u32","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_i32","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_u64","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_i64","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_uint","","",0,{"inputs":[{"name":"byteio"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","",0,{"inputs":[{"name":"byteio"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"read_f64","","",0,{"inputs":[{"name":"byteio"}],"output":{"name":"result"}}],[11,"write_u16","","",0,{"inputs":[{"name":"byteio"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","",0,{"inputs":[{"name":"byteio"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","",0,{"inputs":[{"name":"byteio"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","",0,{"inputs":[{"name":"byteio"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","",0,{"inputs":[{"name":"byteio"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","",0,{"inputs":[{"name":"byteio"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","",0,{"inputs":[{"name":"byteio"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","",0,{"inputs":[{"name":"byteio"},{"name":"f64"}],"output":{"name":"result"}}],[11,"read_u16_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i16_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u32_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i32_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u64_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i64_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_uint_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_f64_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_u16_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64_at","","",0,{"inputs":[{"name":"byteio"},{"name":"u64"},{"name":"f64"}],"output":{"name":"result"}}],[11,"new_pos","","Create a new `Cursor` which starts reading at a specified offset.",1,{"inputs":[{"name":"i"},{"name":"u64"}],"output":{"name":"self"}}],[11,"new","","Create a new Cursor which starts reading at offset zero.",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"into_inner","","Consume `self` and yield the inner `ReadAt` or `WriteAt`.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"i"}}],[11,"get_ref","","Borrow the inner `ReadAt` or `WriteAt`.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"i"}}],[11,"get_mut","","Borrow the inner `ReadAt` or `WriteAt` mutably.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"i"}}],[11,"position","","Get the current read/write position.",1,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Set the current read/write position.",1,{"inputs":[{"name":"cursor"},{"name":"u64"}],"output":null}],[11,"seek","","",1,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"new_pos","","Create a new `SizeCursor` which starts reading at a specified offset.",2,{"inputs":[{"name":"i"},{"name":"u64"}],"output":{"name":"self"}}],[11,"new","","Create a new `SizeCursor` which starts reading at offset zero.",2,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",2,{"inputs":[{"name":"sizecursor"}],"output":{"name":"cursor"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"sizecursor"}],"output":{"name":"cursor"}}],[11,"seek","","",2,{"inputs":[{"name":"sizecursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Create a new `Slice`.",3,{"inputs":[{"name":"i"},{"name":"u64"},{"name":"option"}],"output":{"name":"self"}}],[11,"new_to_end","","Create a new `Slice` that goes to the end of `io`.",3,{"inputs":[{"name":"i"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_at","","",3,null],[11,"write_at","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"slice"}],"output":{"name":"result"}}],[11,"size","","",3,{"inputs":[{"name":"slice"}],"output":{"name":"result"}}],[11,"read_at","std::fs","",4,null],[11,"write_at","","",4,null],[11,"flush","","",4,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"read_at","collections::vec","",5,null],[11,"write_at","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"size","","",5,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[8,"ReadBytesExt","positioned_io","Extends `ReadAt` with methods for reading numbers at offsets.",null,null],[11,"read_u8_at","","Reads an unsigned 8-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i8_at","","Reads a signed 8-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u16_at","","Reads an unsigned 16-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i16_at","","Reads a signed 16-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u32_at","","Reads an unsigned 32-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i32_at","","Reads a signed 32-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u64_at","","Reads an unsigned 64-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i64_at","","Reads a signed 64-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_uint_at","","Reads an unsigned `nbytes`-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int_at","","Reads a signed `nbytes`-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32_at","","Reads a single-precision floating point number at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_f64_at","","Reads a double-precision floating point number at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[8,"WriteBytesExt","","Extends `WriteAt` with methods for writing numbers at offsets.",null,null],[11,"write_u8_at","","Writes an unsigned 8-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8_at","","Writes a signed 8-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16_at","","Writes an unsigned 16-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16_at","","Writes a signed 16-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32_at","","Writes an unsigned 32-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32_at","","Writes a signed 32-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64_at","","Writes an unsigned 64-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64_at","","Writes a signed 64-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint_at","","Writes an unsigned `nbytes`-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int_at","","Writes a signed `nbytes`-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32_at","","Writes a single-precision floating point number to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64_at","","Writes a double-precision floating point number to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ReadInt","","Trait for reading integers.",null,null],[10,"read_u16","","Reads an unsigned 16-bit integer.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_i16","","Reads a signed 16-bit integer.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_u32","","Reads an unsigned 32-bit integer.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_i32","","Reads a signed 32-bit integer.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_u64","","Reads an unsigned 64-bit integer.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_i64","","Reads a signed 64-bit integer.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_uint","","Reads an unsigned `nbytes`-bit integer.",8,{"inputs":[{"name":"readint"},{"name":"usize"}],"output":{"name":"result"}}],[10,"read_int","","Reads a signed `nbytes`-bit integer.",8,{"inputs":[{"name":"readint"},{"name":"usize"}],"output":{"name":"result"}}],[10,"read_f32","","Reads a single-precision floating point number.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[10,"read_f64","","Reads a double-precision floating point number.",8,{"inputs":[{"name":"readint"}],"output":{"name":"result"}}],[8,"WriteInt","","Trait for writing integers.",null,null],[10,"write_u16","","Writes an unsigned 16-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"u16"}],"output":{"name":"result"}}],[10,"write_i16","","Writes a signed 16-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"i16"}],"output":{"name":"result"}}],[10,"write_u32","","Writes an unsigned 32-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"u32"}],"output":{"name":"result"}}],[10,"write_i32","","Writes a signed 32-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"i32"}],"output":{"name":"result"}}],[10,"write_u64","","Writes an unsigned 64-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"u64"}],"output":{"name":"result"}}],[10,"write_i64","","Writes a signed 64-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"i64"}],"output":{"name":"result"}}],[10,"write_uint","","Writes an unsigned `nbytes`-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[10,"write_int","","Writes a signed `nbytes`-bit integer.",9,{"inputs":[{"name":"writeint"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[10,"write_f32","","Writes a single-precision floating point number.",9,{"inputs":[{"name":"writeint"},{"name":"f32"}],"output":{"name":"result"}}],[10,"write_f64","","Writes a double-precision floating point number.",9,{"inputs":[{"name":"writeint"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ReadIntAt","","Trait for reading positioned integers.",null,null],[10,"read_u16_at","","Reads an unsigned 16-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_i16_at","","Reads a signed 16-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_u32_at","","Reads an unsigned 32-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_i32_at","","Reads a signed 32-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_u64_at","","Reads an unsigned 64-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_i64_at","","Reads a signed 64-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_uint_at","","Reads an unsigned `nbytes`-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[10,"read_int_at","","Reads a signed `nbytes`-bit integer at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[10,"read_f32_at","","Reads a single-precision floating point number at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[10,"read_f64_at","","Reads a double-precision floating point number at an offset.",10,{"inputs":[{"name":"readintat"},{"name":"u64"}],"output":{"name":"result"}}],[8,"WriteIntAt","","Trait for writing positioned integers.",null,null],[10,"write_u16_at","","Writes an unsigned 16-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"u16"}],"output":{"name":"result"}}],[10,"write_i16_at","","Writes a signed 16-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"i16"}],"output":{"name":"result"}}],[10,"write_u32_at","","Writes an unsigned 32-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"u32"}],"output":{"name":"result"}}],[10,"write_i32_at","","Writes a signed 32-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"i32"}],"output":{"name":"result"}}],[10,"write_u64_at","","Writes an unsigned 64-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"u64"}],"output":{"name":"result"}}],[10,"write_i64_at","","Writes a signed 64-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"i64"}],"output":{"name":"result"}}],[10,"write_uint_at","","Writes an unsigned `nbytes`-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[10,"write_int_at","","Writes a signed `nbytes`-bit integer to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[10,"write_f32_at","","Writes a single-precision floating point number to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"f32"}],"output":{"name":"result"}}],[10,"write_f64_at","","Writes a double-precision floating point number to an offset.",11,{"inputs":[{"name":"writeintat"},{"name":"u64"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ReadAt","","Trait for reading at an offset.",null,null],[10,"read_at","","Read bytes from an offset in this source into a buffer, returning how many bytes were read.",12,null],[11,"read_exact_at","","Read the exact number of bytes required to fill `buf`, from an offset.",12,null],[8,"WriteAt","","Trait for writing at an offset.",null,null],[10,"write_at","","Write a buffer at an offset, returning the number of bytes written.",13,null],[11,"write_all_at","","Write a complete buffer at an offset.",13,null],[10,"flush","","Flush this writer, ensuring that any buffered data is written.",13,{"inputs":[{"name":"writeat"}],"output":{"name":"result"}}],[8,"Size","","Trait to get the size of an I/O object.",null,null],[10,"size","","Get the size of this object, in bytes.",14,{"inputs":[{"name":"size"}],"output":{"name":"result"}}],[11,"size","std::fs","",4,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"read_u8_at","positioned_io","Reads an unsigned 8-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i8_at","","Reads a signed 8-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u16_at","","Reads an unsigned 16-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i16_at","","Reads a signed 16-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u32_at","","Reads an unsigned 32-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i32_at","","Reads a signed 32-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_u64_at","","Reads an unsigned 64-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_i64_at","","Reads a signed 64-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_uint_at","","Reads an unsigned `nbytes`-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int_at","","Reads a signed `nbytes`-bit integer at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32_at","","Reads a single-precision floating point number at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read_f64_at","","Reads a double-precision floating point number at an offset.",6,{"inputs":[{"name":"readbytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_u8_at","","Writes an unsigned 8-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8_at","","Writes a signed 8-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16_at","","Writes an unsigned 16-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16_at","","Writes a signed 16-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32_at","","Writes an unsigned 32-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32_at","","Writes a signed 32-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64_at","","Writes an unsigned 64-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64_at","","Writes a signed 64-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint_at","","Writes an unsigned `nbytes`-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int_at","","Writes a signed `nbytes`-bit integer to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32_at","","Writes a single-precision floating point number to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64_at","","Writes a double-precision floating point number to an offset.",7,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[3,"ByteIo"],[3,"Cursor"],[3,"SizeCursor"],[3,"Slice"],[3,"File"],[3,"Vec"],[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ReadInt"],[8,"WriteInt"],[8,"ReadIntAt"],[8,"WriteIntAt"],[8,"ReadAt"],[8,"WriteAt"],[8,"Size"]]};
initSearch(searchIndex);
